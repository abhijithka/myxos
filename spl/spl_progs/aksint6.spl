alias physicalSP S0 ;
physicalSP = [PTBR+(2*(SP/512))]*512 + (SP%512) ;
alias sysCallNo S1 ;
alias i S2;
sysCallNo = [physicalSP - 1];

if (sysCallNo==9) then
	alias fname S3;
	fname=[physicalSP-3];
	//search in mem copy of fat
	i=0;
	while(i<512) do
		if([FAT+i]==fname) then
			break;
		endif;
		i=i+8;
	endwhile;
	if(i==512) then
		[physicalSP-2]=-1;
		ireturn;
	endif;

	load(1,[FAT+i+2]);
	alias count_new S5;
	alias count_old S6;
	i=0;
	count_new=0;	
	while(i<6) do
		if([512+i]==-1) then
			break;
		endif;
		count_new=count_new+1;
		i=i+2;
	endwhile;
	i=0;
	count_old=0;
	while(i<6) do
		if([PTBR+i]!=-1) then
			count_old=count_old+1;
		endif;
		i=i+2;
	endwhile;

	if(count_old>count_new) then
		i=count_new;
		while(i<count_old) do
			if([1280+[PTBR+i*2]]==1)     then
				[1280+[PTBR+i*2]]=0;
				[PTBR+2*i]=-1;
				[PTBR+2*i+1]="00";
				i=i+1;
			endif;
		endwhile;
	endif;

	if(count_old<count_new) then
		i=count_old;
		while(i<count_new) do
			if(i==36) then
				[physicalSP-2]=-1;
				ireturn;
			endif;
			if([1280+[PTBR+2*(i-1)]+1]==0) then
				[1280+[PTBR+2*(i-1)]+1]=1;
				[PTBR+2*i]=[PTBR+2*(i-1)]+1;
				[PTBR+2*i+1]="01";
				i=i+1;
			endif;
		endwhile;
	endif;
	i=0;
	while(i<count_new) do
		load([PTBR+2*i], [512+i]);
		i=i+1;
	endwhile;
	
	alias currpcb S4;
	currpcb=READY_LIST+((PTBR-1024)/8)*32;
	
	i=15;
	while(i<31) do
		if([currpcb+i]==-1) then
			break;
		endif;
		[[currpcb+i]+1]=[[currpcb+i]+1]-1;
		if([[currpcb+i]+1]==0) then
			[[currpcb+i]]=-1;
		endif;
		[currpcb+i]=-1;
		[currpcb+i+1]=-1;
		i=i+2;
	endwhile;	

	SP=3*512;
	
	SP=SP+1;
	physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);
	[physicalSP]=0;
	ireturn;
endif;


if( sysCallNo==11) then
	if([PTBR]==-1) then
		[physicalSP-2]=-1;	
		ireturn;
	endif;
	[physicalSP-2]=(PTBR-1024)/8;
	ireturn;
endif;

if( sysCallNo==12) then
	[physicalSP-2]=[READY_LIST+((PTBR-1024)/8)*32+31];
	ireturn;
endif;
ireturn;	
